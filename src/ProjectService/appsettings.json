{
  "Serilog": {
    "Using": [],
    "LevelSwitches": { "$controlSwitch": "Information" },
    "MinimumLevel": { "ControlledBy": "$controlSwitch" },
    "Enrich": [
      "FromLogContext",
      "WithMachineName",
      "WithProcessId",
      "WithThreadId"
    ],
    "WriteTo": [
      {
        "Name": "Console"
      },
      {
        "Name": "Seq",
        "Args": {
          "serverUrl": "http://localhost:5341",
          "apiKey": "oYEgdfIcyr8YgOXI7nIG"
        }
      }
    ]
  },
  "ServiceInfo": {
    "Name": "ProjectService",
    "Id": "E68A3452-AEAF-4E28-92D5-CCC5EE9F0A4C"
  },
  "RabbitMQ": {
    //Common
    "DisactivateUserEndpoint": "Common_DisactivateUser",

    // CRService
    "CheckUserRightsEndpoint": "CRService_CheckUserRights",

    // UserService
    "CheckUserIsAdminEndpoint": "UserService_GetUserAdminStatus",
    "GetUserDataEndpoint": "UserService_GetUserData",
    "GetUsersDataEndpoint": "UserService_GetUsersData",
    "CheckUsersExistenceEndpoint": "UserService_CheckUsersExistence",

    // FileService
    "GetFileEndpoint": "FileService_GetFile",
    "GetImagesEndpoint": "FileService_GetImages",

    // AuthService
    "ValidateTokenEndpoint": "AuthService_ValidateToken",

    // CompanyService
    "GetDepartmentEndpoint": "CompanyService_GetDepartment",
    "FindDepartmentsEndpoint": "CompanyService_FindDepartments",
    "GetUsersDepartmentsUsersPositionsEndpoint": "CompanyService_GetUsersDepartmentsUsersPositions",

    //ProjectService
    "GetProjectIdsEndpoint": "ProjectService_GetProjectIdsEndpoint",
    "GetProjectInfoEndpoint": "ProjectService_GetProjectInfo",
    "GetUserProjectsInfoEndpoint": "ProjectService_GetUserProjectsInfo",
    "SearchProjectsEndpoint": "ProjectService_SearchProjects",
    "GetDepartmentProjectsEndpoint": "ProjectService_GetDepartmentProjects",
    "FindProjectsEndpoint": "ProjectService_FindProjects",
    "FindParseEntitiesEndpoint": "ProjectService_FindParseEntities",
    "GetProjectsUsersEndpoint": "ProjectService_GetProjectsUsers",

    //MessageService
    "CreateWorkspaceEndpoint": "MessageService_CreateWorkspace",

    //TimeService
    "CreateWorkTimeEndpoint": "TimeService_CreateWorkTime"
  },
  "CheckTokenMiddleware": {
    "SkippedEndpoints": [
      "/apiinformation"
    ]
  }
}