{
  "Serilog": {
    "Using": [],
    "LevelSwitches": { "$controlSwitch": "Information" },
    "MinimumLevel": { "ControlledBy": "$controlSwitch" },
    "Enrich": [
      "FromLogContext",
      "WithMachineName",
      "WithProcessId",
      "WithThreadId"
    ],
    "WriteTo": [
      {
        "Name": "Console"
      },
      {
        "Name": "Seq",
        "Args": {
          "serverUrl": "http://localhost:5341",
          "apiKey": "oYEgdfIcyr8YgOXI7nIG"
        }
      }
    ]
  },
  "ServiceInfo": {
    "Name": "ProjectService",
    "Id": "E68A3452-AEAF-4E28-92D5-CCC5EE9F0A4C"
  },
  "ConnectionStrings": {
    "Redis": "localhost:6379"
  },
  "RabbitMQ": {
    // Subscriptions
    "DisactivateProjectUserEndpoint": "Common_DisactivateProjectUser",

    // CRService
    "CheckUserRightsEndpoint": "CRService_CheckUserRights",

    // UserService
    "CheckUserIsAdminEndpoint": "UserService_GetUserAdminStatus",
    "GetUsersDataEndpoint": "UserService_GetUsersData",
    "CheckUsersExistenceEndpoint": "UserService_CheckUsersExistence",

    // AuthService
    "ValidateTokenEndpoint": "AuthService_ValidateToken",

    // OfficeService
    "GetOfficesEndpoint": "OfficeService_GetOffices",

    // DepartmentService
    "GetDepartmentsEndpoint": "DepartmentService_GetDepartments",

    // PositionService
    "GetPositionsEndpoint": "PositionService_GetPositions",

    // CompanyService
    "GetCompaniesEndpoint": "CompanyService_GetCompanies",

    //ProjectService
    "SearchProjectsEndpoint": "ProjectService_SearchProjects",
    "FindParseEntitiesEndpoint": "ProjectService_FindParseEntities",
    "GetProjectsUsersEndpoint": "ProjectService_GetProjectsUsers",
    "GetProjectsEndpoint": "ProjectService_GetProjects",
    "CheckProjectsExistenceEndpoint": "ProjectService_ChechProjectsExistence",
    "CheckProjectUsersExistenceEndpoint": "ProjectService_ChechProjectUsersExistence",
    "CheckFilesAccessesEndpoint": "ProjectService_CheckFilesAccesses",

    //MessageService
    "CreateWorkspaceEndpoint": "MessageService_CreateWorkspace",

    //ImageService
    "GetImagesEndpoint": "ImageService_GetImages",
    "CreateImagesEndpoint": "ImageService_CreateImages"    
  },
  "CheckTokenMiddleware": {
    "SkippedEndpoints": [
      "/apiinformation"
    ]
  }
}